{
  "name": "got",
  "version": "3.3.1",
  "description": "Simplified HTTP/HTTPS requests",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/got.git"
  },
  "maintainers": [
    {
      "name": "Sindre Sorhus",
      "email": "sindresorhus@gmail.com",
      "url": "sindresorhus.com"
    },
    {
      "name": "Vsevolod Strukchinsky",
      "email": "floatdrop@gmail.com",
      "url": "github.com/floatdrop"
    }
  ],
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "tap test/test-*.js",
    "coverage": "istanbul cover tape --report html -- test/test-*.js"
  },
  "files": [
    "index.js"
  ],
  "keywords": [
    "http",
    "https",
    "get",
    "got",
    "url",
    "uri",
    "request",
    "util",
    "utility",
    "simple",
    "curl",
    "wget",
    "fetch"
  ],
  "dependencies": {
    "duplexify": "^3.2.0",
    "infinity-agent": "^2.0.0",
    "is-redirect": "^1.0.0",
    "is-stream": "^1.0.0",
    "lowercase-keys": "^1.0.0",
    "nested-error-stacks": "^1.0.0",
    "object-assign": "^3.0.0",
    "prepend-http": "^1.0.0",
    "read-all-stream": "^3.0.0",
    "timed-out": "^2.0.0"
  },
  "devDependencies": {
    "from2-array": "0.0.3",
    "istanbul": "^0.3.13",
    "pem": "^1.4.4",
    "tap": "^1.0.0"
  },
  "readme": "<h1 align=\"center\">\n\t<br>\n\t<img width=\"360\" src=\"https://rawgit.com/sindresorhus/got/master/media/logo.svg\" alt=\"got\">\n\t<br>\n\t<br>\n\t<br>\n</h1>\n\n> Simplified HTTP/HTTPS requests\n\n[![Build Status](https://travis-ci.org/sindresorhus/got.svg?branch=master)](https://travis-ci.org/sindresorhus/got)\n\nA nicer interface to the built-in [`http`](http://nodejs.org/api/http.html) module.\n\nIt supports following redirects, streams, automagically handling gzip/deflate and some convenience options.\n\nCreated because [`request`](https://github.com/mikeal/request) is bloated *(several megabytes!)* and slow.\n\n\n## Install\n\n```\n$ npm install --save got\n```\n\n\n## Usage\n\n```js\nvar got = require('got');\n\n// Callback mode\ngot('todomvc.com', function (err, data, res) {\n\tconsole.log(data);\n\t//=> <!doctype html> ...\n});\n\n\n// Stream mode\ngot('todomvc.com').pipe(fs.createWriteStream('index.html'));\n\n// For POST, PUT and PATCH methods got returns a WritableStream\nfs.createReadStream('index.html').pipe(got.post('todomvc.com'));\n```\n\n### API\n\nIt's a `GET` request by default, but can be changed in `options`.\n\n#### got(url, [options], [callback])\n\n##### url\n\n*Required*  \nType: `string`, `object`\n\nThe URL to request or bare [http.request options](https://nodejs.org/api/http.html#http_http_request_options_callback) object.\n\nProperties from `options` will override properties in the parsed `url`.\n\n##### options\n\nType: `object`\n\nAny of the [`http.request`](http://nodejs.org/api/http.html#http_http_request_options_callback) options.\n\n###### body\n\nType: `string`, `Buffer`, `ReadableStream`  \n\n*This option and stream mode are mutually exclusive.*\n\nBody that will be sent with a `POST` request. If present in `options` and `options.method` is not set - `options.method` will be set to `POST`.\n\nIf `content-length` or `transfer-encoding` is not set in `options.headers` and `body` is a string or buffer, `content-length` will be set to the body length.\n\n###### encoding\n\nType: `string`, `null`  \nDefault: `'utf8'`\n\nEncoding to be used on `setEncoding` of the response data. If `null`, the body is returned as a Buffer.\n\n###### json\n\nType: `boolean`  \nDefault: `false`\n\n*This option and stream mode are mutually exclusive.*\n\nParse response body with `JSON.parse` and set `accept` header to `application/json`.\n\n###### query\n\nType: `string`, `object`  \n\nQuery string object that will be added to the request URL. This will override the query string in `url`.\n\n###### timeout\n\nType: `number`\n\nMilliseconds after which the request will be aborted and an error event with `ETIMEDOUT` code will be emitted.\n\n###### agent\n\n[http.Agent](http://nodejs.org/api/http.html#http_class_http_agent) instance.\n\nIf `undefined` - [`infinity-agent`](https://github.com/floatdrop/infinity-agent) will be used to backport Agent class from Node.js core.\n\nTo use default [globalAgent](http://nodejs.org/api/http.html#http_http_globalagent) just pass `null`.\n\n##### callback(error, data, response)\n\n###### error\n\n`Error` object with HTTP status code as `code` property.\n\n###### data\n\nThe data you requested.\n\n###### response\n\nThe [response object](http://nodejs.org/api/http.html#http_http_incomingmessage).\n\nWhen in stream mode, you can listen for events:\n\n##### .on('response', response)\n\n`response` event to get the response object of the final request.\n\n##### .on('redirect', response, nextOptions)\n\n`redirect` event to get the response object of a redirect. Second argument is options for the next request to the redirect location.\n\n##### .on('error', error, body, response)\n\n`error` event emitted in case of protocol error (like `ENOTFOUND` etc.) or status error (4xx or 5xx). Second argument is body of server response in case of status error. Third argument is response object.\n\n###### response\n\nThe [response object](http://nodejs.org/api/http.html#http_http_incomingmessage).\n\n#### got.get(url, [options], [callback])\n#### got.post(url, [options], [callback])\n#### got.put(url, [options], [callback])\n#### got.patch(url, [options], [callback])\n#### got.head(url, [options], [callback])\n#### got.delete(url, [options], [callback])\n\nSets `options.method` to the method name and makes a request.\n\n\n## Proxy\n\nYou can use the [`tunnel`](https://github.com/koichik/node-tunnel) module with the `agent` option to work with proxies:\n\n```js\nvar got = require('got');\nvar tunnel = require('tunnel');\n\ngot('todomvc.com', {\n\tagent: tunnel.httpOverHttp({\n\t\tproxy: {\n\t\t\thost: 'localhost'\n\t\t}\n\t})\n}, function () {});\n```\n\n\n## Tip\n\nIt's a good idea to set the `'user-agent'` header so the provider can more easily see how their resource is used. By default it's the URL to this repo.\n\n```js\nvar got = require('got');\n\ngot('todomvc.com', {\n\theaders: {\n\t\t'user-agent': 'https://github.com/your-username/repo-name'\n\t}\n}, function () {});\n```\n\n\n## Related\n\n- [gh-got](https://github.com/sindresorhus/gh-got) - Convenience wrapper for interacting with the GitHub API\n- [got-promise](https://github.com/floatdrop/got-promise) - Promise wrapper\n\n\n## Created by\n\n[![Sindre Sorhus](https://avatars.githubusercontent.com/u/170270?v=3&s=100)](http://sindresorhus.com) | [![Vsevolod Strukchinsky](https://avatars.githubusercontent.com/u/365089?v=3&s=100)](https://github.com/floatdrop)\n---|---\n[Sindre Sorhus](http://sindresorhus.com) | [Vsevolod Strukchinsky](https://github.com/floatdrop)\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/sindresorhus/got/issues"
  },
  "homepage": "https://github.com/sindresorhus/got#readme",
  "_id": "got@3.3.1",
  "_shasum": "e5d0ed4af55fc3eef4d56007769d98192bcb2eca",
  "_resolved": "https://registry.npmjs.org/got/-/got-3.3.1.tgz",
  "_from": "got@>=3.2.0 <4.0.0"
}
