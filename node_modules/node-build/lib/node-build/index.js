var sys = require('sys'),
    goals = require('./goals'),
    tasks = require('./tasks'),
    when = require('./when'),
    unless = when.not(),
    events = require('events');

var workItems = [];
var previousResult;
var emitter = new events.EventEmitter();

goals.register(substitute,fail);
tasks.register(done,fail,function(){return previousResult;},goals.achieve,insertTask);
when.register(function(){return previousResult;});

function fail(msg){
    emitter.emit('fail',msg);
}

function done(result){
    previousResult=result;
    emitter.emit('done');
}

function add(workItem){
    workItems.push(workItem);
}
function insertTask(task){
   workItems.unshift({type: 'task', action: task});
}

function substitute(subTasks){
    workItems=subTasks.concat(workItems);
    emitter.emit('done');
    
}

emitter.addListener('done', function (name) {
  if(workItems.length>0){
    var work = workItems.shift();
    if(work.type=='goal') goals.achieve(work.action);
    else if(work.type=='task') tasks.achieve(work.action);
  } else {
    sys.log("Complete");
    process.exit(0);
  }
});

emitter.addListener('fail', function (msg) {
  sys.log("Error "+ msg);
  process.exit(1);
});

exports.define=function(name, tasks, depends){
    return goals.define(name, tasks, depends);
}
exports.achieve=function(goal){
	sys.log("Building target :"+goal);
	goals.achieve(goal);
};
exports.when=when;
exports.unless=unless;
exports.emitter=emitter;
exports.workItems=workItems;

