var sys = require('sys'),
    taskLib = require('./tasks'),
    events = require('events');
    
var goals = {};

var callBacks = {
    substitute: function(task){},
    fail: function(msg){}
};

function defineGoal(name, tasks, depends){
    dependsOn=function(){
        for(var i=0; i<arguments.length; i++){
            goal.depends.push(arguments[i]);
        }
        return goal;
    };
    var goal = {
        tasks: tasks?tasks:[],
        depends: depends?depends:[]
        };
    goal.dependsOn=dependsOn;
    goal.perform=new taskLib.decorator(goal.tasks);
    goals[name]=goal;
    return goal
}


function achiveGoal(name){
    var goal = goals[name];
    if(goal==null) {
        callBacks.fail("No such goal "+name);
        return;
    }
    sys.log(name+":");
    var goalSchedule =[];
    if(goal.depends) goal.depends.forEach(
        function(subgoal){
            goalSchedule.push({type: 'goal', action: subgoal});
        });
    if(goal.tasks) goal.tasks.forEach(
        function(task){
            goalSchedule.push({type: 'task', action: task});
        });
    callBacks.substitute(goalSchedule);
}

exports.achieve=achiveGoal;
exports.define=defineGoal;
exports.get=function(name){return goals[name];}
exports.clear=function(){goals={};}

exports.register = function(substitute, fail){
    callBacks.substitute=substitute;
    callBacks.fail=fail;
}