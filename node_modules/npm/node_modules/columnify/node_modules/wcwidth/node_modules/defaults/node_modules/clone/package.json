{
  "name": "clone",
  "description": "deep cloning of objects and arrays",
  "tags": [
    "clone",
    "object",
    "array",
    "function",
    "date"
  ],
  "version": "1.0.2",
  "repository": {
    "type": "git",
    "url": "git://github.com/pvorb/node-clone.git"
  },
  "bugs": {
    "url": "https://github.com/pvorb/node-clone/issues"
  },
  "main": "clone.js",
  "author": {
    "name": "Paul Vorbach",
    "email": "paul@vorba.ch",
    "url": "http://paul.vorba.ch/"
  },
  "contributors": [
    {
      "name": "Blake Miner",
      "email": "miner.blake@gmail.com",
      "url": "http://www.blakeminer.com/"
    },
    {
      "name": "Tian You",
      "email": "axqd001@gmail.com",
      "url": "http://blog.axqd.net/"
    },
    {
      "name": "George Stagas",
      "email": "gstagas@gmail.com",
      "url": "http://stagas.com/"
    },
    {
      "name": "Tobiasz Cudnik",
      "email": "tobiasz.cudnik@gmail.com",
      "url": "https://github.com/TobiaszCudnik"
    },
    {
      "name": "Pavel Lang",
      "email": "langpavel@phpskelet.org",
      "url": "https://github.com/langpavel"
    },
    {
      "name": "Dan MacTough",
      "url": "http://yabfog.com/"
    },
    {
      "name": "w1nk",
      "url": "https://github.com/w1nk"
    },
    {
      "name": "Hugh Kennedy",
      "url": "http://twitter.com/hughskennedy"
    },
    {
      "name": "Dustin Diaz",
      "url": "http://dustindiaz.com"
    },
    {
      "name": "Ilya Shaisultanov",
      "url": "https://github.com/diversario"
    },
    {
      "name": "Nathan MacInnes",
      "email": "nathan@macinn.es",
      "url": "http://macinn.es/"
    },
    {
      "name": "Benjamin E. Coe",
      "email": "ben@npmjs.com",
      "url": "https://twitter.com/benjamincoe"
    },
    {
      "name": "Nathan Zadoks",
      "url": "https://github.com/nathan7"
    },
    {
      "name": "Róbert Oroszi",
      "email": "robert+gh@oroszi.net",
      "url": "https://github.com/oroce"
    },
    {
      "name": "Aurélio A. Heckert",
      "url": "http://softwarelivre.org/aurium"
    },
    {
      "name": "Guy Ellis",
      "url": "http://www.guyellisrocks.com/"
    }
  ],
  "license": "MIT",
  "engines": {
    "node": ">=0.8"
  },
  "dependencies": {},
  "devDependencies": {
    "nodeunit": "~0.9.0"
  },
  "optionalDependencies": {},
  "scripts": {
    "test": "nodeunit test.js"
  },
  "readme": "# clone\n\n[![build status](https://secure.travis-ci.org/pvorb/node-clone.png)](http://travis-ci.org/pvorb/node-clone)\n\n[![info badge](https://nodei.co/npm/clone.png?downloads=true&downloadRank=true&stars=true)](http://npm-stat.com/charts.html?package=clone)\n\noffers foolproof _deep cloning_ of objects, arrays, numbers, strings etc. in JavaScript.\n\n\n## Installation\n\n    npm install clone\n\n(It also works with browserify, ender or standalone.)\n\n\n## Example\n\n~~~ javascript\nvar clone = require('clone');\n\nvar a, b;\n\na = { foo: { bar: 'baz' } };  // initial value of a\n\nb = clone(a);                 // clone a -> b\na.foo.bar = 'foo';            // change a\n\nconsole.log(a);               // show a\nconsole.log(b);               // show b\n~~~\n\nThis will print:\n\n~~~ javascript\n{ foo: { bar: 'foo' } }\n{ foo: { bar: 'baz' } }\n~~~\n\n**clone** masters cloning simple objects (even with custom prototype), arrays,\nDate objects, and RegExp objects. Everything is cloned recursively, so that you\ncan clone dates in arrays in objects, for example.\n\n\n## API\n\n`clone(val, circular, depth)`\n\n  * `val` -- the value that you want to clone, any type allowed\n  * `circular` -- boolean\n\n    Call `clone` with `circular` set to `false` if you are certain that `obj`\n    contains no circular references. This will give better performance if needed.\n    There is no error if `undefined` or `null` is passed as `obj`.\n  * `depth` -- depth to which the object is to be cloned (optional,\n    defaults to infinity)\n\n`clone.clonePrototype(obj)`\n\n  * `obj` -- the object that you want to clone\n\nDoes a prototype clone as\n[described by Oran Looney](http://oranlooney.com/functional-javascript/).\n\n\n## Circular References\n\n~~~ javascript\nvar a, b;\n\na = { hello: 'world' };\n\na.myself = a;\nb = clone(a);\n\nconsole.log(b);\n~~~\n\nThis will print:\n\n~~~ javascript\n{ hello: \"world\", myself: [Circular] }\n~~~\n\nSo, `b.myself` points to `b`, not `a`. Neat!\n\n\n## Test\n\n    npm test\n\n\n## Caveat\n\nSome special objects like a socket or `process.stdout`/`stderr` are known to not\nbe cloneable. If you find other objects that cannot be cloned, please [open an\nissue](https://github.com/pvorb/node-clone/issues/new).\n\n\n## Bugs and Issues\n\nIf you encounter any bugs or issues, feel free to [open an issue at\ngithub](https://github.com/pvorb/node-clone/issues) or send me an email to\n<paul@vorba.ch>. I also always like to hear from you, if you’re using my code.\n\n## License\n\nCopyright © 2011-2015 [Paul Vorbach](http://paul.vorba.ch/) and\n[contributors](https://github.com/pvorb/node-clone/graphs/contributors).\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the “Software”), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/pvorb/node-clone#readme",
  "_id": "clone@1.0.2",
  "_shasum": "260b7a99ebb1edfe247538175f783243cb19d149",
  "_resolved": "https://registry.npmjs.org/clone/-/clone-1.0.2.tgz",
  "_from": "clone@>=1.0.2 <2.0.0"
}
